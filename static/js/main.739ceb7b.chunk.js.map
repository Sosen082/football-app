{"version":3,"sources":["img/bg-1.jpg","SearchBar.js","LeagueTable.js","Fixtures.js","DisplayData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","state","selectedLeague","findClub","props","selectLeague","handleChange","event","value","target","options","selectedIndex","getAttribute","setState","Navbar","bg","variant","className","Form","block","FormGroup","Control","as","name","id","ref","onChange","e","Button","onClick","this","React","Component","LeagueTable","leagueTable","getStandings","a","async","fetch","leagueIndex","headers","apiKey","mode","api_call2","json","j","standingsData","console","log","standings","table","newStateArray","slice","push","position","index","team","crest","crestUrl","points","played","playedGames","won","drew","draw","lost","goalsFor","goalsAgainst","goalDifference","alert","length","Table","childTable","striped","hover","size","responsive","colSpan","align","class","map","key","width","src","alt","leagueFixtures","leagueResults","currentWeek","matchInfo","getCurrentWeekFixtures","api_call3","matchesScheduledData","matches","matchday","getFixtures","gameday","api_call4","matchdayData","score","fullTime","homeTeam","awayTeam","status","homeTeamName","homeTeamID","awayTeamName","awayTeamID","homeTeamScore","awayTeamScore","displayPreviousGameweek","error","displayNextGameweek","displayMatchStatistics","matchID","api_call5","matchData","match","halfTimehomeTeamScore","halfTime","halfTimeawayTeamScore","referee","referees","venue","icon","fixture","match2","match3","API_KEY","DisplayData","leagueCode","getData","api_call","i","competitionsData","competitions","code","Fixtures","Row","Col","fixtures","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.739ceb7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-1.e4e2cd7f.jpg\";","import React from 'react';\r\nimport {Form, Button, FormGroup, Navbar} from 'react-bootstrap';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    state = {\r\n        selectedLeague: \"PL\"\r\n    }\r\n    \r\n    findClub = () => {\r\n        this.props.selectLeague(this.state.selectedLeague)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let value = event.target.options[event.target.selectedIndex].getAttribute(\"name\");\r\n        this.setState({\r\n            selectedLeague: value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <Navbar bg=\"dark\" variant=\"dark\" className = \"navbar\">\r\n            <Form block>\r\n                <FormGroup>\r\n                    <Form.Control as =\"select\" name=\"select\" id=\"selectLeague\" className=\"select-css\" ref=\"club\" onChange={(e) => this.handleChange(e)}>\r\n                    <option name = \"PL\">Premier League</option>\r\n                    <option name = \"PD\">La Liga</option>\r\n                    <option name = \"SA\">Serie A</option>\r\n                    <option name = \"BL1\">Bundesliga</option>\r\n                    <option name = \"FL1\">Ligue 1</option>\r\n                    </Form.Control>\r\n                </FormGroup>\r\n                <Button className=\"search-btn\" variant=\"dark\" id=\"btn-1\" onClick={this.findClub}>Search</Button>\r\n            </Form>\r\n            </Navbar>\r\n            \r\n         );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './LeagueTable.css'\r\nimport {Table} from 'react-bootstrap';\r\n\r\nclass LeagueTable extends React.Component {\r\n\r\nstate = {\r\n        leagueTable: [],\r\n    }\r\n\r\n\r\ngetStandings = async () => {\r\n\r\n    try {\r\n        const api_call2 = await fetch(`https://api.football-data.org/v2/competitions/${this.props.leagueIndex}/standings`, {\r\n        headers: {\r\n            'X-Auth-Token': this.props.apiKey\r\n          },\r\n          mode: 'cors'\r\n        });\r\n  \r\n        const standingsData = await api_call2.json();\r\n        console.log(standingsData.standings);\r\n  \r\n        var standings = standingsData.standings[0];\r\n  \r\n        this.setState({\r\n            leagueTable: []\r\n        });\r\n  \r\n        for(var j in standings.table){\r\n           var newStateArray = this.state.leagueTable.slice(); \r\n           newStateArray.push({\r\n             position: standings.table[j].position,\r\n             index: standings.table[j].team.id,\r\n             name: standings.table[j].team.name,\r\n             crest: standings.table[j].team.crestUrl,\r\n             points: standings.table[j].points,\r\n             played: standings.table[j].playedGames,\r\n             won: standings.table[j].won,\r\n             drew: standings.table[j].draw,\r\n             lost: standings.table[j].lost,\r\n             goalsFor: standings.table[j].goalsFor,\r\n             goalsAgainst: standings.table[j].goalsAgainst,\r\n             goalDifference: standings.table[j].goalDifference\r\n           });\r\n           this.setState({\r\n            leagueTable: newStateArray\r\n          });\r\n        } \r\n  \r\n        console.log(this.state.leagueTable);\r\n      } catch (error) {\r\n          alert(\"Exceeded amount of available api calls. Try again in a minute.\");\r\n      }\r\n    }\r\n    \r\n\r\nrender() \r\n    {\r\n    return (\r\n        <div>\r\n        {this.state.leagueTable.length > 0 && \r\n            <Table ref = {(childTable) => {this.childTable = childTable}} className=\"league-table\" striped hover size=\"sm\" responsive=\"xl\">\r\n            <thead>\r\n            <tr>\r\n            <th colSpan=\"10\" align=\"center\" class=\"league-title\">League Table</th>\r\n            </tr>\r\n            <tr>\r\n            <th>Position</th>\r\n            <th>Team</th>\r\n            <th>Played</th>\r\n            <th>Points</th>\r\n            <th>W</th>\r\n            <th>D</th>\r\n            <th>L</th>\r\n            <th>GF</th>\r\n            <th>GA</th>\r\n            <th>GD</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.leagueTable.map(team => (\r\n            <tr key={team.position}>\r\n            <td width=\"5%\">{team.position}</td>\r\n            <td width=\"15%\" className = \"table-team-name\"><img src = {team.crest} alt='crest' className=\"crest\"/> {team.name}</td>\r\n            <td width=\"10%\">{team.played}</td>\r\n            <td width=\"10%\">{team.points}</td>\r\n            <td width=\"10%\">{team.won}</td>\r\n            <td width=\"10%\">{team.drew}</td>\r\n            <td width=\"10%\">{team.lost}</td>\r\n            <td width=\"10%\">{team.goalsFor}</td>\r\n            <td width=\"10%\">{team.goalsAgainst}</td>\r\n            <td width=\"10%\">{team.goalDifference}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n        }\r\n        </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default LeagueTable;","import React from 'react';\r\nimport './Fixtures.css'\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport {MDBIcon} from 'mdbreact';\r\n\r\nclass LeagueTable extends React.Component {\r\n\r\nstate = {\r\n        leagueFixtures: [],\r\n        leagueResults: [],\r\n        currentWeek: 0,\r\n        matchInfo: [],\r\n    }\r\n\r\n    getCurrentWeekFixtures = async () => {\r\n      \r\n        const api_call3 = await fetch(`https://api.football-data.org/v2/competitions/${this.props.leagueIndex}/matches?status=SCHEDULED`, {\r\n              headers: {\r\n                'X-Auth-Token': this.props.apiKey\r\n              },\r\n              mode: 'cors'\r\n            });\r\n  \r\n            const matchesScheduledData = await api_call3.json();\r\n            console.log(matchesScheduledData);\r\n  \r\n  \r\n            this.setState({\r\n              leagueFixtures: [],\r\n              currentWeek: matchesScheduledData.matches[0].matchday\r\n          });\r\n  \r\n          console.log(this.state.currentWeek);\r\n          console.log(this.props.leagueIndex);\r\n          this.getFixtures(this.state.currentWeek);\r\n      }\r\n  \r\n      getFixtures = async (gameday) => {\r\n        try {\r\n          const api_call4 = await fetch(`https://api.football-data.org/v2/competitions/${this.props.leagueIndex}/matches?matchday=${gameday}`, {\r\n          headers: {\r\n            'X-Auth-Token': this.props.apiKey\r\n          },\r\n          mode: 'cors'\r\n        });\r\n      \r\n        \r\n      const matchdayData = await api_call4.json();\r\n      console.log(matchdayData);\r\n  \r\n      this.setState ({\r\n        leagueFixtures: []\r\n      });\r\n  \r\n      for(var j in matchdayData.matches){\r\n  \r\n        var newStateArray = this.state.leagueFixtures.slice();\r\n  \r\n        if(matchdayData.matches[j].score.fullTime.homeTeam == null & matchdayData.matches[j].score.fullTime.awayTeam == null){\r\n          newStateArray.push({\r\n            index: matchdayData.matches[j].id,\r\n            status: matchdayData.matches[j].status,\r\n            homeTeamName: matchdayData.matches[j].homeTeam.name,\r\n            homeTeamID: matchdayData.matches[j].homeTeam.id,\r\n            awayTeamName: matchdayData.matches[j].awayTeam.name,\r\n            awayTeamID: matchdayData.matches[j].awayTeam.id,\r\n            homeTeamScore: '-',\r\n            awayTeamScore: '-'\r\n          });\r\n        }\r\n  \r\n        else {\r\n          newStateArray.push({\r\n            index: matchdayData.matches[j].id,\r\n            status: matchdayData.matches[j].status,\r\n            homeTeamName: matchdayData.matches[j].homeTeam.name,\r\n            homeTeamID: matchdayData.matches[j].homeTeam.id,\r\n            awayTeamName: matchdayData.matches[j].awayTeam.name,\r\n            awayTeamID: matchdayData.matches[j].awayTeam.id,\r\n            homeTeamScore: matchdayData.matches[j].score.fullTime.homeTeam,\r\n            awayTeamScore: matchdayData.matches[j].score.fullTime.awayTeam\r\n          });\r\n        }\r\n  \r\n        this.setState({\r\n          leagueFixtures: newStateArray \r\n        });\r\n  \r\n        }\r\n        \r\n      } catch (error) {\r\n        alert(\"Exceeded amount of available api calls. Try again in a minute\")\r\n      }\r\n  \r\n      console.log(this.state.leagueFixtures);\r\n    }\r\n  \r\n    displayPreviousGameweek = () => {\r\n  \r\n      try {\r\n        var gameday =this.state.currentWeek - 1;\r\n  \r\n        this.setState({\r\n        currentWeek: this.state.currentWeek - 1\r\n        });\r\n\r\n        console.log(gameday);\r\n  \r\n        this.getFixtures(gameday);\r\n      } catch (error) {\r\n        alert(\"Exceeded amount of available api calls. Try again in a minute\");\r\n      }\r\n    }\r\n  \r\n    displayNextGameweek = (gameday) => {\r\n  \r\n      try {\r\n  \r\n        this.setState({\r\n          currentWeek: gameday\r\n      })\r\n  \r\n      console.log(gameday);\r\n  \r\n      this.getFixtures(gameday);\r\n      } catch (error) {\r\n        alert(\"Exceeded amount of available api calls. Try again in a minute\");\r\n      }\r\n  \r\n  \r\n    }\r\n  \r\n    displayMatchStatistics = async (matchID) => {\r\n  \r\n      try {\r\n        const api_call5 = await fetch(`https://api.football-data.org/v2/matches/${matchID}`, {\r\n          headers: {\r\n            'X-Auth-Token': this.props.apiKey\r\n          },\r\n          mode: 'cors'\r\n        });\r\n      \r\n      const matchData = await api_call5.json();\r\n      console.log(matchData);\r\n  \r\n      this.setState({\r\n        matchInfo: []\r\n    });\r\n        try {\r\n          var newStateArray = this.state.matchInfo.slice(); \r\n        newStateArray.push({\r\n          index: matchData.match.id,\r\n          status: matchData.match.status,\r\n          matchday: matchData.match.matchday,\r\n          homeTeamName: matchData.match.homeTeam.name,\r\n          homeTeamID: matchData.match.homeTeam.id,\r\n          awayTeamName: matchData.match.awayTeam.name,\r\n          awayTeamID: matchData.match.awayTeam.id,\r\n          homeTeamScore: matchData.match.score.fullTime.homeTeam,\r\n          awayTeamScore: matchData.match.score.fullTime.awayTeam,\r\n          halfTimehomeTeamScore: matchData.match.score.halfTime.awayTeam,\r\n          halfTimeawayTeamScore: matchData.match.score.halfTime.awayTeam,\r\n          referee: matchData.match.referees[0].name,\r\n          venue: matchData.match.venue,\r\n  \r\n        });\r\n        this.setState({\r\n          matchInfo: newStateArray\r\n        });\r\n  \r\n        console.log(this.state.matchInfo);\r\n      \r\n          \r\n        } catch (error) {\r\n        alert('No Details');\r\n        }\r\n      } catch (error) {\r\n        alert(\"Exceeded amount of available api calls. Try again in a minute\");\r\n      }\r\n        \r\n    }\r\n\r\nrender() \r\n    {\r\n    return (\r\n        <div>\r\n        {this.state.leagueFixtures.length > 0 && \r\n            <Table className=\"fixtures-table\" width = \"40%\" striped hover size=\"sm\" responsive=\"sm\">\r\n            <thead>\r\n            <tr>\r\n            <th colSpan=\"3\">\r\n              <Button id=\"btn-1\" className=\"arrow-left\" onClick={() => this.displayPreviousGameweek(this.state.currentWeek - 1)}>\r\n                <MDBIcon icon=\"caret-left\"/>\r\n              </Button>\r\n              <p className=\"fixtures-table-details\">Gameweek {this.state.currentWeek}</p>\r\n              <Button id=\"btn-1\" className=\"arrow-right\" onClick={() => this.displayNextGameweek(this.state.currentWeek + 1)}>\r\n                <MDBIcon icon=\"caret-right\"/></Button>\r\n            </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.leagueFixtures.map(fixture => (\r\n            <tr onClick={() => this.displayMatchStatistics(fixture.index)} className = \"fixture-row\" key={fixture.index}>\r\n            <td width=\"40%\" align=\"right\">{fixture.homeTeamName}</td>\r\n            <td width=\"20%\">{fixture.homeTeamScore} : {fixture.awayTeamScore}</td>\r\n            <td width=\"40%\"align=\"left\">{fixture.awayTeamName}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n          }\r\n        {this.state.matchInfo.length > 0 && \r\n        <Table className=\"fixtures-table\" width = \"40%\" striped hover size=\"sm\" responsive=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"3\">\r\n                <p className=\"fixtures-table-details\">Match details</p>\r\n              </th>\r\n            </tr>  \r\n          </thead>\r\n            <tbody>\r\n            {this.state.matchInfo.map(match => (\r\n                <tr key={match.index}>\r\n                <td width=\"40%\" align=\"right\">{match.homeTeamName}</td>\r\n                <td width=\"20%\">{match.homeTeamScore} : {match.awayTeamScore}</td>\r\n                <td width=\"40%\"align=\"left\">{match.awayTeamName}</td>\r\n                </tr>\r\n            ))}\r\n            {this.state.matchInfo.map(match2 => (\r\n                <tr key={match2.index}>  \r\n                <td colSpan=\"3\">Referee: {match2.referee}</td>\r\n                </tr>\r\n\r\n            ))}\r\n            {this.state.matchInfo.map(match3 => (\r\n                <tr key={match3.index}>\r\n                <td colSpan=\"3\">Venue: {match3.venue}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody> \r\n        </Table> \r\n        }  \r\n        </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default LeagueTable;","import React from 'react';\r\nimport SearchBar from './SearchBar.js';\r\nimport LeagueTable from './LeagueTable.js'\r\nimport Fixtures from './Fixtures.js'\r\nimport './DisplayData.css';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\n\r\nconst API_KEY = 'd4a9110b90c6415bb3d252836a4bf034';\r\n\r\n\r\nclass DisplayData extends React.Component {\r\n\r\n\r\n\r\n    state = {\r\n        leagueCode: \" \",\r\n        leagueIndex: 0,\r\n      }\r\n\r\n    getData = async (leagueCode) => {\r\n      try {\r\n        const api_call = await fetch(`https://api.football-data.org/v2/competitions`, {\r\n            headers: {\r\n              'X-Auth-Token': API_KEY\r\n            },\r\n            mode: 'cors'\r\n          });\r\n          const competitionsData = await api_call.json();\r\n          console.log(competitionsData);\r\n\r\n          for (var i in competitionsData.competitions){\r\n            if (competitionsData.competitions[i].code === leagueCode){\r\n              this.setState({\r\n                leagueCode: competitionsData.competitions[i].code,\r\n                leagueIndex: competitionsData.competitions[i].id\r\n              })\r\n              console.log(competitionsData.competitions[i].code);\r\n            }\r\n        }\r\n        \r\n      } catch (error) {\r\n        alert(\"Exceeded amount of available api calls. Try again in a minute.\");\r\n      }  \r\n\r\n      this.LeagueTable.getStandings();\r\n      this.Fixtures.getCurrentWeekFixtures();\r\n      }\r\n\r\n\r\n  \r\n\r\nrender() {\r\n    return (\r\n    <div className=\"app-data\">\r\n      <SearchBar selectLeague={this.getData}/>\r\n    {this.state.leagueCode != ' ' && \r\n      <div>\r\n      <Row>\r\n      <p className=\"league-title\">League info</p>\r\n      </Row>\r\n    <div className = \"league-info\">\r\n      <Row className = \"row\">\r\n        <Col className=\"column\">\r\n          <LeagueTable ref = {(table) => this.LeagueTable = table} leagueIndex = {this.state.leagueIndex} apiKey = {API_KEY}/>\r\n        </Col>\r\n        <Col className=\"column\">\r\n          <Fixtures ref = {(fixtures) => this.Fixtures = fixtures} leagueIndex = {this.state.leagueIndex} apiKey = {API_KEY}/>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n      </div>\r\n      }      \r\n    </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default DisplayData;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport DisplayData from './DisplayData.js';\r\nimport backgroundImage from './img/bg-1.jpg';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n           <div className=\"app\">\r\n            <DisplayData />    \r\n           </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}